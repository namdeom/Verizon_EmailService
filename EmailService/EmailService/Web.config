<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="EmailService">
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" source="ServiceEdge" formatter="Text Formatter" log="Application" machineName="." traceOutputOptions="None"/>
      <add name="Flat File Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="C:\Temp\EmailService.log" header="----------------START----------------" footer="-----------------END-----------------" formatter="Text Formatter"/>
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Exception Data:{errorMessages}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter"/>
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Flat File Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="Error" name="EmailService">
        <listeners>
          <add name="Flat File Trace Listener"/>
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="Warning" name="All Events">
        <listeners>
          <add name="Event Log Listener"/>
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category"/>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Event Log Listener"/>
          <add name="Flat File Trace Listener"/>
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <appSettings>
    <add key="EmailServiceToken" value="6C06251C-377E-4803-A96F-5CC10490748B"/>
    <add key="SmtpServer" value="localhost"/>
    <add key="SmtpPort" value="25"/>
  </appSettings>
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.EntLib.EntLibLoggerFactoryAdapter, Common.Logging.EntLib50"/>
    </logging>
  </common>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5.1" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.5.1"/>
    <httpRuntime/>
    <pages controlRenderingCompatibilityVersion="4.0"/>
  </system.web>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding closeTimeout="00:01:00" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:10:00">
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm=""/>
            <message algorithmSuite="Default" clientCredentialType="UserName"/>
          </security>
          <readerQuotas maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxDepth="2147483647" maxNameTableCharCount="2147483647" maxStringContentLength="2147483647"/>
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https"/>
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true"/>
    <!-- <diagnostics>
      <messageLogging
           logEntireMessage="true"
           logMalformedMessages="true"
           logMessagesAtServiceLevel="true"
           logMessagesAtTransportLevel="true"
           maxMessagesToLog="2147483647"
           maxSizeOfMessageToLog="2147483647"/>
    </diagnostics>-->
  </system.serviceModel>
  <!--<system.diagnostics>   
    <sources>
      <source name="System.ServiceModel"
      switchValue="Verbose,ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="ServiceModelTraceListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="c:\logs\EmailService_Tracelog.svclog"
      type="System.Diagnostics.XmlWriterTraceListener, System, 
      Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
      <add initializeData="c:\logs\EmailService_Messages.svclog"
      type="System.Diagnostics.XmlWriterTraceListener, System, 
      Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
    </sharedListeners>
    <trace autoflush="true"/>
</system.diagnostics>-->
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
  <connectionStrings>
    <add name="ServiceEdgeCommonEntities" connectionString="metadata=res://*/Entities.BadEmailDomains.csdl|res://*/Entities.BadEmailDomains.ssdl|res://*/Entities.BadEmailDomains.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=.;initial catalog=ServiceEdgeCommon;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1"/>
  </runtime>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <!--General aliases-->
    <!--Interface aliases-->
    <alias alias="IEmailServiceProvider" type="Services.EmailServiceProvider.Interface.IEmailServiceProvider, Services.EmailServiceProvider.Interface"/>
    <alias alias="ILoggerFactoryAdapter" type="Common.Logging.ILoggerFactoryAdapter, Common.Logging"/>
    <alias alias="IUserProvider" type="Services.CommonLibraries.UserProvider.Interface.IUserProvider, Services.CommonLibraries.UserProvider"/>
    <alias alias="IBadEmailDomainsCheckProvider" type="Services.EmailServiceProvider.Interface.IBadEmailDomainsCheckProvider, Services.EmailServiceProvider.Interface"/>
    <alias alias="IBadEmailDomainsRepository" type="Services.EmailService.SmtpEmailServiceProvider.Repository.IBadEmailDomainsRepository, Services.EmailService.SmtpEmailServiceProvider"/>
    <!-- Concrete implementations aliases -->
    <alias alias="FakeUserProvider" type="Services.EmailService.FakeUserProvider, Services.EmailService"/>
    <alias alias="SmtpEmailServiceProvider" type="Services.EmailService.SmtpEmailServiceProvider.SmtpEmailService, Services.EmailService.SmtpEmailServiceProvider"/>
    <alias alias="FakeEmailServiceProvider" type="Services.EmailServiceProvider.Interface.FakeEmailServiceProvider, Services.EmailServiceProvider.Interface"/>
    <alias alias="EntLibLoggerFactoryAdapter" type="Common.Logging.EntLib.EntLibLoggerFactoryAdapter, Common.Logging.EntLib50"/>
    <alias alias="BadEmailDomainsProvider" type="Services.EmailService.SmtpEmailServiceProvider.BadEmailDomainsProvider, Services.EmailService.SmtpEmailServiceProvider"/>
    <container>
      <register type="IEmailServiceProvider" mapTo="FakeEmailServiceProvider"/>
      <register type="ILoggerFactoryAdapter" mapTo="EntLibLoggerFactoryAdapter">
        <constructor/>
      </register>
      <register type="IUserProvider" mapTo="FakeUserProvider"/>
      <register type="IBadEmailDomainsCheckProvider" mapTo="BadEmailDomainsProvider"/>
    </container>
  </unity>
</configuration>